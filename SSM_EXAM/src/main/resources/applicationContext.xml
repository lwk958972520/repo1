<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--开启Spring框架组件扫描-->
    <context:component-scan base-package="com.itheima"></context:component-scan>

    <!--配置Spring框架加载属性配置文件-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!--Spring整合Mybatis   开始-->
    <!--配置数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--配置加载映射配置文件,创建mapper的代理类  Spring整合Mybatis相关类-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="com.itheima.domain"></property>
    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itheima.dao"></property>
    </bean>
    <!--Spring整合Mybatis   结束-->

    <!-- Spring声明式事物控制 -->
    <!-- 1. 配置事物管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 2. 配置事物通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager" >
        <!-- 4. 配置事物属性-->
        <tx:attributes>
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="add*" read-only="false" propagation="REQUIRED"></tx:method>
            <tx:method name="update*"  read-only="false" propagation="REQUIRED" ></tx:method>
            <tx:method name="delete*"  read-only="false" propagation="REQUIRED" ></tx:method>
        </tx:attributes>
    </tx:advice>
    <!-- 3. 配置事物AOP-->
    <aop:config>
        <!-- 3.1 配置切入点表达式 -->
        <aop:pointcut id="txPointcut" expression="execution(* com.itheima.service.impl.*.*(..))"></aop:pointcut>
        <!-- 3.2 配置事物的通知和切入点表达式的结合-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
    </aop:config>

    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <!--配置SpringMVC-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:annotation-driven></mvc:annotation-driven>


    <!--释放静态资源-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!--<mvc:resources mapping="/css/**" location="/css/**"></mvc:resources>-->
</beans>